services:
  magento:
    image: docker.io/bitnami/magento:2
    container_name: magento
    privileged: true
    ports:
      - "8080:8080"
      - '8443:8443'
    environment:
      - MAGENTO_HOST=localhost
      # - MAGENTO_HOST=ec2-18-233-63-32.compute-1.amazonaws.com #prod
      - MAGENTO_DATABASE_HOST=mysql
      - MAGENTO_DATABASE_PORT_NUMBER=3306
      - MAGENTO_DATABASE_USER=magento
      - MAGENTO_DATABASE_NAME=magento
      - MAGENTO_ADMIN_URL_PREFIX=admin # http://localhost:8080/admin --> user:bitnami1
      - MAGENTO_EXTERNAL_HTTP_PORT_NUMBER=8080
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTICSEARCH_PORT_NUMBER=9200
      - ALLOW_EMPTY_PASSWORD=yes
      - BITNAMI_DEBUG=true
    volumes:
      # Para montar o magento em um diretorio local para debug, Ã© preciso:
      # 1. Comentar a linha que mapeia o "Produtoreativo/Visits"
      # 2. Rodar o docker compose para criar a pasta local magento_data
      # 3. Descomentar a linha que mapeia o "Produtoreativo/Visits" e rodar o docker compose novamente
      - ./magento_data:/bitnami/magento
      #- ./magento/app/code/Produtoreativo/Visits:/bitnami/magento/app/code/Produtoreativo/Visits
    depends_on:
      mysql:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy

  mysql:
    image: docker.io/bitnami/mysql:8.0
    container_name: mysql
    volumes:
      - mysql_data:/bitnami/mysql
    ports:
      - "3306:3306"
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_USER=magento
      - MYSQL_DATABASE=magento
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  phpmyadmin:
    image: phpmyadmin:5
    container_name: phpmyadmin
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - 8181:80
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=mysql
      - PMA_USER=magento

  elasticsearch:
    image: docker.io/bitnami/elasticsearch:7.17.10
    container_name: elasticsearch
    volumes:
      - elasticsearch_data:/bitnami/elasticsearch/data
    environment:
      - discovery.type=single-node
      - node.name=elasticsearch
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - 9200:9200
    healthcheck:
        test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
        interval: 30s
        timeout: 30s
        retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.10
    container_name: kibana
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test:
        [ "CMD-SHELL", "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'" ]
      interval: 30s
      timeout: 30s
      retries: 5

  datadog-agent:
    image: gcr.io/datadoghq/agent:latest
    container_name: datadog-agent
    environment:
      - DD_API_KEY=${DD_API_KEY}
      - DD_SITE=datadoghq.com
      - DD_ENV=development
      - DD_VERSION=1.0
      - DD_SERVICE=magento-stack
      - DD_APM_ENABLED=true
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      - DD_PROCESS_AGENT_ENABLED=true
      - DD_CONTAINER_EXCLUDE=name:datadog-agent
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
      - DD_TAGS=team:pre,env:dev,feature:group_buying
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
    ports:
      - "127.0.0.1:8126:8126" # APM Traces
    networks:
      - default

volumes:
  mysql_data:
  elasticsearch_data:
  magento_data: